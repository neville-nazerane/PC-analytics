// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PcAnalytics.ServerLogic;

#nullable disable

namespace PcAnalytics.ServerLogic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PcAnalytics.Models.Entities.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Identifier");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComputerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("Name");

                    b.ToTable("Hardwares");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComputerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SensorGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SensorTypeId")
                        .HasColumnType("int");

                    b.Property<float?>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("SensorGroupId");

                    b.HasIndex("SensorTypeId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.SensorGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HardwareId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("Name");

                    b.ToTable("SensorGroups");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.SensorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("SensorTypes");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Hardware", b =>
                {
                    b.HasOne("PcAnalytics.Models.Entities.Computer", "Computer")
                        .WithMany()
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Record", b =>
                {
                    b.HasOne("PcAnalytics.Models.Entities.Computer", null)
                        .WithMany("Records")
                        .HasForeignKey("ComputerId");

                    b.HasOne("PcAnalytics.Models.Entities.SensorGroup", "SensorGroup")
                        .WithMany("Records")
                        .HasForeignKey("SensorGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PcAnalytics.Models.Entities.SensorType", "SensorType")
                        .WithMany("Records")
                        .HasForeignKey("SensorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SensorGroup");

                    b.Navigation("SensorType");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.SensorGroup", b =>
                {
                    b.HasOne("PcAnalytics.Models.Entities.Hardware", "Hardware")
                        .WithMany("SensorGroups")
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hardware");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Computer", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.Hardware", b =>
                {
                    b.Navigation("SensorGroups");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.SensorGroup", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("PcAnalytics.Models.Entities.SensorType", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
